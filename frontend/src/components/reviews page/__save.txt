 parent block
 
 const JumpAnim = () => {
	const { ref, inView } = useInView({
		threshold: 0.5, // порог видимости
	 });
  
	 const [scrollPosition, setScrollPosition] = useState(0);
	 const [isScrollingDown, setIsScrollingDown] = useState(true);
  
	 const animationProps = useSpring({
		to: {
		  transform: `translateY(${isScrollingDown ? "100%" : "0%"})`,
		},
		from: {
		  transform: `translateY(${isScrollingDown ? "0%" : "100%"})`,
		},
		config: config.gentle, // тип анимации
	 });
  
	 useEffect(() => {
		const handleScroll = () => {
		  const currentPosition = window.pageYOffset;
		  setIsScrollingDown(currentPosition > scrollPosition);
		  setScrollPosition(currentPosition);
		};
  
		window.addEventListener("scroll", handleScroll);
  
		return () => {
		  window.removeEventListener("scroll", handleScroll);
		};
	 }, [scrollPosition]);
  
	 return (
		<div ref={ref} className={styles.reviews}>
		  <Block animationProps={animationProps} blockStyle={{ backgroundColor: "#f00" }} />
		  <Block animationProps={animationProps} blockStyle={{ backgroundColor: "#0f0" }} />
  
		  <p>
			 Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repudiandae perspiciatis magnam
			 facere nulla id ex ut, suscipit asperiores possimus, temporibus dicta consequatur assumenda
			 expedita tempora nihil laudantium minus fugit maiores.
		  </p>
		</div>
	 );
};